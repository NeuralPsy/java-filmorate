CREATE TABLE IF NOT EXISTS MPA (
    RATING_ID SMALLINT,
    NAME CHARACTER VARYING(50),
    LAST_UPDATE DATE,
    CONSTRAINT MPA_PK PRIMARY KEY (RATING_ID)
);

CREATE TABLE IF NOT EXISTS FILMS (
      ID BIGINT NOT NULL,
      NAME CHARACTER VARYING(50),
      RELEASE_DATE DATE,
      DESCRIPTION CHARACTER VARYING(200),
      DURATION BIGINT,
      MPA_RATING SMALLINT REFERENCES MPA(RATING_ID),
      LAST_UPDATE DATE,
      CONSTRAINT FILMS_PK PRIMARY KEY (ID)
);

CREATE INDEX IF NOT EXISTS FILMS_ID_IDX ON FILMS (ID);

CREATE TABLE IF NOT EXISTS USERS (
      ID BIGINT NOT NULL,
      EMAIL CHARACTER VARYING,
      LOGIN CHARACTER VARYING,
      NAME CHARACTER VARYING,
      BIRTHDAY DATE,
      LAST_UPDATE DATE,
      CONSTRAINT USERS_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS GENRE (
      GENRE_ID SMALLINT,
      NAME CHARACTER VARYING,
      LAST_UPDATE DATE,
      CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
       FILM_ID BIGINT REFERENCES FILMS(ID),
       GENRE_ID SMALLINT REFERENCES GENRE(GENRE_ID),
       LAST_UPDATE DATE
);


CREATE TABLE IF NOT EXISTS FRIENDSHIP_STATUS (
          STATUS_ID SMALLINT NOT NULL,
          NAME CHARACTER VARYING(30),
          LAST_UPDATE DATE,
          CONSTRAINT FRIENDSHIP_STATUS_PK PRIMARY KEY (STATUS_ID)
);


CREATE TABLE IF NOT EXISTS FRIENDLIST (
           USER_ID BIGINT REFERENCES USERS(ID) NOT NULL,
           FRIEND_ID BIGINT REFERENCES USERS(ID) NOT NULL,
           STATUS SMALLINT REFERENCES FRIENDSHIP_STATUS(STATUS_ID)NOT NULL,
           LAST_UPDATE DATE NOT NULL
);



